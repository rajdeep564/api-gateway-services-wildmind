{
  "info": {
    "name": "Firebase Auth API",
    "description": "Complete auth testing collection for Google OAuth + Email/Password with OTP",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:5000",
      "type": "string"
    },
    {
      "key": "idToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "testEmail",
      "value": "test@example.com",
      "type": "string"
    },
    {
      "key": "testPassword",
      "value": "password123",
      "type": "string"
    },
    {
      "key": "otpCode",
      "value": "123456",
      "type": "string"
    },
    {
      "key": "username",
      "value": "testuser123",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Health Check",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/health",
          "host": ["{{baseUrl}}"],
          "path": ["health"]
        }
      }
    },
    {
      "name": "Email/Password Flow",
      "item": [
        {
          "name": "1. Start Email OTP",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"{{testEmail}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/email/start",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "email", "start"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('OTP sent successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const json = pm.response.json();",
                  "    pm.expect(json.responseStatus).to.eql('success');",
                  "    pm.expect(json.data.sent).to.be.true;",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "2. Verify OTP (with password)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"{{testEmail}}\",\n  \"code\": \"{{otpCode}}\",\n  \"password\": \"{{testPassword}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/email/verify",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "email", "verify"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('OTP verified successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const json = pm.response.json();",
                  "    pm.expect(json.responseStatus).to.eql('success');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "3. Set Username",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"{{testEmail}}\",\n  \"username\": \"{{username}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/email/username",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "email", "username"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Username set successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const json = pm.response.json();",
                  "    pm.expect(json.responseStatus).to.eql('success');",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Google OAuth Flow",
      "item": [
        {
          "name": "Create Session (Google)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"idToken\": \"{{idToken}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/session",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "session"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Session created successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const json = pm.response.json();",
                  "    pm.expect(json.responseStatus).to.eql('success');",
                  "    pm.expect(json.data.user).to.be.an('object');",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Protected Routes",
      "item": [
        {
          "name": "Get Current User",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/me",
              "host": ["{{baseUrl}}"],
              "path": ["api", "me"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('User retrieved successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const json = pm.response.json();",
                  "    pm.expect(json.responseStatus).to.eql('success');",
                  "    pm.expect(json.data.user).to.be.an('object');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Update User Profile",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"updated_username\",\n  \"photoURL\": \"https://example.com/avatar.jpg\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/me",
              "host": ["{{baseUrl}}"],
              "path": ["api", "me"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('User updated successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const json = pm.response.json();",
                  "    pm.expect(json.responseStatus).to.eql('success');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Logout",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/logout",
              "host": ["{{baseUrl}}"],
              "path": ["api", "logout"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Logout successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const json = pm.response.json();",
                  "    pm.expect(json.responseStatus).to.eql('success');",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Utility Endpoints",
      "item": [
        {
          "name": "Resolve Email by Username",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/auth/resolve-email?id={{username}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "resolve-email"],
              "query": [
                {
                  "key": "id",
                  "value": "{{username}}"
                }
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Email resolved successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const json = pm.response.json();",
                  "    pm.expect(json.responseStatus).to.eql('success');",
                  "    pm.expect(json.data.email).to.be.a('string');",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Validation Tests",
      "item": [
        {
          "name": "Invalid Email OTP Start",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"invalid-email\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/email/start",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "email", "start"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Validation error for invalid email', function () {",
                  "    pm.response.to.have.status(400);",
                  "    const json = pm.response.json();",
                  "    pm.expect(json.responseStatus).to.eql('error');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Invalid OTP Code",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"{{testEmail}}\",\n  \"code\": \"12345\",\n  \"password\": \"{{testPassword}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/email/verify",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "email", "verify"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Validation error for invalid OTP', function () {",
                  "    pm.response.to.have.status(400);",
                  "    const json = pm.response.json();",
                  "    pm.expect(json.responseStatus).to.eql('error');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Invalid Username",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"{{testEmail}}\",\n  \"username\": \"ab\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/email/username",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "email", "username"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Validation error for short username', function () {",
                  "    pm.response.to.have.status(400);",
                  "    const json = pm.response.json();",
                  "    pm.expect(json.responseStatus).to.eql('error');",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Auto-generate test data",
          "const timestamp = Date.now();",
          "pm.collectionVariables.set('testEmail', `test${timestamp}@example.com`);",
          "pm.collectionVariables.set('username', `user${timestamp}`.slice(0, 15));"
        ]
      }
    }
  ]
}
