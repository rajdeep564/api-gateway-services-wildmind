"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = require("express");
const authController_1 = require("../controllers/auth/authController");
const redeemCodeController_1 = require("../controllers/redeemCodeController");
const authMiddleware_1 = require("../middlewares/authMiddleware");
const validateAuth_1 = require("../middlewares/validateAuth");
const router = (0, express_1.Router)();
router.post('/session', validateAuth_1.validateSession, authController_1.authController.createSession);
router.post('/login', validateAuth_1.validateLogin, authController_1.authController.loginWithEmailPassword);
router.post('/google', validateAuth_1.validateGoogleSignIn, authController_1.authController.googleSignIn);
router.post('/google/username', validateAuth_1.validateGoogleUsername, authController_1.authController.setGoogleUsername);
router.post('/email/start', validateAuth_1.validateOtpStart, authController_1.authController.startEmailOtp);
router.post('/email/verify', validateAuth_1.validateOtpVerify, authController_1.authController.verifyEmailOtp);
router.post('/email/username', validateAuth_1.validateUsername, authController_1.authController.setEmailUsername);
router.get('/resolve-email', authController_1.authController.resolveEmail);
router.get('/username/check', validateAuth_1.validateCheckUsername, authController_1.authController.checkUsername);
router.get('/me', authMiddleware_1.requireAuth, authController_1.authController.getCurrentUser);
router.patch('/me', authMiddleware_1.requireAuth, validateAuth_1.validateUpdateMe, authController_1.authController.updateUser);
router.post('/logout', authController_1.authController.logout);
router.post('/redeem-code/apply', authMiddleware_1.requireAuth, redeemCodeController_1.redeemCodeController.applyRedeemCode);
exports.default = router;
